@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise 03 - Insert");

    var title = "";
    var artistid = "0";
    var releaseyear = "";
    var releaselabel = "";

    var db = Database.Open("Chinook");
    var artistquery = @"SELECT ArtistId, Name
        FROM Artists
        Order by Name";
    var artistlist = db.Query(artistquery);

    Validation.Add("Title",
        Validator.Required("A title is required"),
        Validator.StringLength(160, 0, "The title is limited to 160 characters"));

    Validation.Add("ArtistList",
        Validator.Required("Artist name is required"));

    Validation.Add("ReleaseYear",
        Validator.Required("Release year is required"),
        Validator.Integer("Release year must be a number"),
        Validator.Range(1950, DateTime.Today.Year, "Release year must be between 1950 and today"));

    Validation.Add("ReleaseLabel",
        Validator.StringLength(50, 0, "Release label is limited to 50 characters"));
}

@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    // retreive the data from the form
    title = Request.Form["Title"];
    artistid = Request.Form["ArtistList"];
    releaseyear = Request.Form["ReleaseYear"];
    releaselabel = Request.Form["ReleaseLabel"];
    var thebutton = Request.Form["FormButton"];

    //when you have multiple buttons, a good practice is to determine
    //    what action to do for the press button FIRST!
    if (thebutton.Equals("Clear"))
    {
        //empty the form fields
        title = "";
        artistid = "0";
        releaseyear = "";
        releaselabel = "";
    }
    else
    {
        //Validation of data
        //Validation.IsValid() is used to execute the server side validation
        //the if statement DOES NOT need an else as the Validation control
        //      message will appear in your Summary() or Message() controls
        if (Validation.IsValid())
        {
            //you may have logical validation needed for your data that cannot
            //be accomplished using Validation Controls or HTML5
            //this type of validation is a programmed validation

            //assume that the categoryid is a required field
            var valid = true;
            if (artistid.Equals("0"))
            {
                valid = false;
                <div class="col-12 text-center">
                    <p style="color:darkslateblue">
                        You must select an artist
                    </p>
                </div>
            }
            //check validation result
            if (valid)
            {
                //good data
                try
                {
                    //connect to the database
                    //  done above
                    //create sql command
                    var inscommand = @"INSERT INTO Albums (Title, ArtistId, ReleaseYear, ReleaseLabel)
                    VALUES(@0, @1, @2, @3)";
                    //execute the command
                    db.Execute(inscommand, title,
                        artistid.Equals("0") ? null : artistid,
                        string.IsNullOrEmpty(releaseyear) ? null : releaseyear,
                        string.IsNullOrEmpty(releaselabel) ? null : releaselabel);
                    <div class="col-12 text-center">
                        <p style="color:green">
                            Album has been added
                        </p>
                    </div>
                }
                catch (Exception ex)
                {
                    <div class="col-12 text-center">
                        <p style="color:firebrick; font-size:large">
                            Processing error: @ex.Message
                        </p>
                    </div>
                }
            }

        }

    }

}
else
{

}
@* there are two ways to display your validation errors
    a) using the ValidationSummary()
        - bulleted list of all errors in all fields
    b) using the ValidationMessage()
        - placed beside the actual control field
        - display only the 1st error of field*@

@Html.ValidationSummary()

<form id="theform" method="post">
    <div class="row">
        <div class="col-md-6 text-right">

            <label for="Title">Title:</label><br />
            <label for="ArtistId">Artist:</label><br />
            <label for="ReleaseYear">Year:</label><br />
            <label for="ReleaseLabel">Label:</label><br />
            <br />
        </div>
        <div class="col-me-6 text-left">

            <input type="text" value="@title"
                   id="Title" name="Title" />
            <br />
            <select id="ArtistList" name="ArtistList">
                <option value="0">select artist...</option>
                @foreach (var artist in artistlist)
                {
                    //for the select control, the default display on an event
                    //   is the 1st option tag
                    //to retain the option selected between posts, you need to
                    //   set the selected option using the attribute selected
                    if (artistid == artist.ArtistId.ToString())
                    {
                        <option value="@artist.ArtistId" selected>@artist.Name</option>
                    }
                    else
                    {
                        <option value="@artist.ArtistId">@artist.Name</option>
                    }

                }
            </select>
            <br />
            <input type="number" id="ReleaseYear" name="ReleaseYear"
                   value="@releaseyear" /><br />
            <input type="text" id="ReleaseLabel" name="ReleaseLabel"
                   value="@releaselabel" /><br />
            <br />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-center">
            <input type="submit" id="FormButton" name="FormButton"
                   class="btn btn-primary" value="Add" />
            <input type="submit" id="FormButton" name="FormButton" formnovalidate
                   class="btn" value="Clear" />
        </div>
    </div>
</form>
